// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGBuildableConveyorBase.h"

bool FConveyorBeltItems::NetDeltaSerialize( FNetDeltaSerializeInfo& parms ){ return bool(); }
void FConveyorBeltItems::MarkArrayDirty(){ }
void FConveyorBeltItems::MarkItemDirty( FConveyorBeltItem& item ){ }
AFGBuildableConveyorBase::AFGBuildableConveyorBase(){ }
void AFGBuildableConveyorBase::GetLifetimeReplicatedProps( TArray< FLifetimeProperty >& OutLifetimeProps ) const{ }
void AFGBuildableConveyorBase::BeginPlay(){ }
void AFGBuildableConveyorBase::EndPlay( const EEndPlayReason::Type endPlayReason ){ }
void AFGBuildableConveyorBase::Serialize(FArchive& ar){ Super::Serialize(ar); }
void AFGBuildableConveyorBase::Tick( float dt ){ }
void AFGBuildableConveyorBase::PostLoadGame_Implementation( int32 saveVersion, int32 gameVersion ){ }
uint8 AFGBuildableConveyorBase::MaxNumGrab( float dt ) const{ return uint8(); }
//float AFGBuildableConveyorBase::FindOffsetClosestToLocation( const FVector& location ) const{ return float(); }
//void AFGBuildableConveyorBase::GetLocationAndDirectionAtOffset( float offset, FVector& out_location, FVector& out_direction ) const{ }
void AFGBuildableConveyorBase::Factory_Tick( float deltaTime ){ }
bool AFGBuildableConveyorBase::Factory_PeekOutput_Implementation( const  UFGFactoryConnectionComponent* connection, TArray< FInventoryItem >& out_items, TSubclassOf< UFGItemDescriptor > type ) const{ return bool(); }
bool AFGBuildableConveyorBase::Factory_GrabOutput_Implementation(  UFGFactoryConnectionComponent* connection, FInventoryItem& out_item, float& out_OffsetBeyond, TSubclassOf< UFGItemDescriptor > type ){ return bool(); }
void AFGBuildableConveyorBase::GetDismantleInventoryReturns( TArray< FInventoryStack >& out_returns ) const{ }
//void AFGBuildableConveyorBase::TickItemTransforms( float dt ){ }
int32 AFGBuildableConveyorBase::FindItemClosestToLocation( const FVector& location ) const{ return int32(); }
bool AFGBuildableConveyorBase::Factory_HasItemAt( int32 index ) const{ return bool(); }
FInventoryItem AFGBuildableConveyorBase::Factory_PeekItemAt( int32 index ) const{ return FInventoryItem(); }
void AFGBuildableConveyorBase::Factory_RemoveItemAt( int32 index ){ }
void AFGBuildableConveyorBase::Factory_DequeueItem(){ }
void AFGBuildableConveyorBase::Factory_EnqueueItem( const FInventoryItem& item, float initialOffset ){ }
bool AFGBuildableConveyorBase::HasRoomOnBelt( float& out_availableSpace ) const{ return bool(); }
