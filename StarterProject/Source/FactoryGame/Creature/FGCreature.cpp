// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGCreature.h"

void AFGCreature::GetLifetimeReplicatedProps( TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
AFGCreature::AFGCreature( const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) { }
void AFGCreature::BeginPlay(){ }
void AFGCreature::PreInitializeComponents(){ }
void AFGCreature::Tick( float deltaTime){ }
void AFGCreature::Died( AActor* died){ }
FVector AFGCreature::GetPawnViewLocation() const{ return FVector(); }
void AFGCreature::StartRotationMovement_Implementation( FRotator targetRotation){ }
void AFGCreature::CancelRotationMovement_Implementation(){ }
void AFGCreature::ConfigureArachnophobiaMode_Implementation( bool isArachnophobiaMode){ }
void AFGCreature::OnArachnophobiaModeChanged( bool isArachnophobiaMode){ }
void AFGCreature::CheckRotationMovement(){ }
void AFGCreature::Multicast_ConsumeItem_Implementation( TSubclassOf<  UFGItemDescriptor > itemDescriptor, int32 amount ){ }
void AFGCreature::SetMoveSpeed( EMoveSpeed newMoveSpeedType){ }
void AFGCreature::AiCalculateLeadTrajectory( const FVector& targetPos, const FVector& targetVelocity, const FVector& fromPos, float interceptorSpeed, bool &isPosibleToLead , FVector& interceptPoint, float leadScaling ){ }
void AFGCreature::SpawnDeathItem_Implementation(){ }
void AFGCreature::OnRep_TargetRotation(){ }
void AFGCreature::OnRep_IsEnabled(){ }
void AFGCreature::SetEnabled( EEnabled enabled){ }
