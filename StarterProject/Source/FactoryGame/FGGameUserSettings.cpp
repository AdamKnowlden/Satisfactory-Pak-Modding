// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGGameUserSettings.h"

void UFGGameUserSettings::ApplyNonResolutionSettings(){ }
void UFGGameUserSettings::SetToDefaults(){ }
void UFGGameUserSettings::ResetToCurrentSettings(){ }
void UFGGameUserSettings::ValidateSettings(){ }
void UFGGameUserSettings::SetAudioToDefaults(){ }
void UFGGameUserSettings::ResetAudioToCurrentSettings(){ }
UFGGameUserSettings* UFGGameUserSettings::GetFGGameUserSettings(){ return nullptr; }
void UFGGameUserSettings::SetAudioVolume( FString name, float value){ }
float UFGGameUserSettings::GetAudioVolume( FString name){ return float(); }
void UFGGameUserSettings::SetArachnophobiaMode( bool newArachnophobiaMode){ }
void UFGGameUserSettings::SetInvertedLook( bool newInvertLook){ }
void UFGGameUserSettings::SetHoldToSprint( bool newHoldToSprint){ }
void UFGGameUserSettings::SetAutoSortInventory( bool shouldAutoSort){ }
void UFGGameUserSettings::SetFOV( int32 newFOV){ }
void UFGGameUserSettings::SetMotionBlurEnabled( bool enable){ }
bool UFGGameUserSettings::IsMotionBlurEnabled(){ return bool(); }
bool UFGGameUserSettings::IsMotionBlurDirty() const{ return bool(); }
int32 UFGGameUserSettings::GetDefaultQualitySetting( FString settingName){ return int32(); }
void UFGGameUserSettings::SetNeworkQuality( int32 newNetworkQuality){ }
void UFGGameUserSettings::RefreshNetworkQualityValues(){ }
bool UFGGameUserSettings::IsUsingCustomQualitySetting( FString settingName){ return bool(); }
bool UFGGameUserSettings::IsPostProcessUsingCustomSettings(){ return bool(); }
void UFGGameUserSettings::UpdatePostProcessSettings(){ }
void UFGGameUserSettings::AddCustomActionMapping( FFGKeyMapping newMapping){ }
void UFGGameUserSettings::RemoveAllCustomActionMappings(){ }
void UFGGameUserSettings::SetHeadBobScale( float newHeadBobScale){ }
void UFGGameUserSettings::UpdateFoliageQualityChanges(){ }
